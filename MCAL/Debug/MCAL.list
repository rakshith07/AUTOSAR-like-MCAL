
MCAL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002fc  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000484  08000484  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000484  08000484  00020014  2**0
                  CONTENTS
  4 .ARM          00000000  08000484  08000484  00020014  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000484  08000484  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000484  08000484  00010484  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000488  08000488  00010488  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000014  20000000  0800048c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020014  2**0
                  CONTENTS
 10 .bss          0000001c  20000014  20000014  00020014  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000030  20000030  00020014  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020014  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020044  2**0
                  CONTENTS, READONLY
 14 .debug_info   00001283  00000000  00000000  00020087  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000000ef  00000000  00000000  0002130a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000050  00000000  00000000  00021400  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000034  00000000  00000000  00021450  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00000d75  00000000  00000000  00021484  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   0000025a  00000000  00000000  000221f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00003cd3  00000000  00000000  00022453  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000007c  00000000  00000000  00026128  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000066  00000000  00000000  000261a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000014 	.word	0x20000014
 80001a4:	00000000 	.word	0x00000000
 80001a8:	0800046c 	.word	0x0800046c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000018 	.word	0x20000018
 80001c4:	0800046c 	.word	0x0800046c

080001c8 <main>:
#include "Std_Types.h"

void initIO(void);

int main(void)
{
 80001c8:	b580      	push	{r7, lr}
 80001ca:	b08a      	sub	sp, #40	; 0x28
 80001cc:	af00      	add	r7, sp, #0
	initIO();
 80001ce:	f000 f899 	bl	8000304 <initIO>
    /* Loop forever */
	while(1)
	{
		spGPIOD_ODR->pin_12 = Pin_High;
 80001d2:	4b4a      	ldr	r3, [pc, #296]	; (80002fc <main+0x134>)
 80001d4:	681a      	ldr	r2, [r3, #0]
 80001d6:	7853      	ldrb	r3, [r2, #1]
 80001d8:	f043 0310 	orr.w	r3, r3, #16
 80001dc:	7053      	strb	r3, [r2, #1]
		spGPIOD_ODR->pin_13 = Pin_Low;
 80001de:	4b47      	ldr	r3, [pc, #284]	; (80002fc <main+0x134>)
 80001e0:	681a      	ldr	r2, [r3, #0]
 80001e2:	7853      	ldrb	r3, [r2, #1]
 80001e4:	f36f 1345 	bfc	r3, #5, #1
 80001e8:	7053      	strb	r3, [r2, #1]
		spGPIOD_ODR->pin_14 = Pin_High;
 80001ea:	4b44      	ldr	r3, [pc, #272]	; (80002fc <main+0x134>)
 80001ec:	681a      	ldr	r2, [r3, #0]
 80001ee:	7853      	ldrb	r3, [r2, #1]
 80001f0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80001f4:	7053      	strb	r3, [r2, #1]
		spGPIOD_ODR->pin_15 = Pin_Low;
 80001f6:	4b41      	ldr	r3, [pc, #260]	; (80002fc <main+0x134>)
 80001f8:	681a      	ldr	r2, [r3, #0]
 80001fa:	7853      	ldrb	r3, [r2, #1]
 80001fc:	f36f 13c7 	bfc	r3, #7, #1
 8000200:	7053      	strb	r3, [r2, #1]
		for(uint32 i=0 ; i < 300000 ; i++ );
 8000202:	2300      	movs	r3, #0
 8000204:	627b      	str	r3, [r7, #36]	; 0x24
 8000206:	e002      	b.n	800020e <main+0x46>
 8000208:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800020a:	3301      	adds	r3, #1
 800020c:	627b      	str	r3, [r7, #36]	; 0x24
 800020e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000210:	4a3b      	ldr	r2, [pc, #236]	; (8000300 <main+0x138>)
 8000212:	4293      	cmp	r3, r2
 8000214:	d9f8      	bls.n	8000208 <main+0x40>
		for(uint32 i=0 ; i < 300000 ; i++ );
 8000216:	2300      	movs	r3, #0
 8000218:	623b      	str	r3, [r7, #32]
 800021a:	e002      	b.n	8000222 <main+0x5a>
 800021c:	6a3b      	ldr	r3, [r7, #32]
 800021e:	3301      	adds	r3, #1
 8000220:	623b      	str	r3, [r7, #32]
 8000222:	6a3b      	ldr	r3, [r7, #32]
 8000224:	4a36      	ldr	r2, [pc, #216]	; (8000300 <main+0x138>)
 8000226:	4293      	cmp	r3, r2
 8000228:	d9f8      	bls.n	800021c <main+0x54>
		for(uint32 i=0 ; i < 300000 ; i++ );
 800022a:	2300      	movs	r3, #0
 800022c:	61fb      	str	r3, [r7, #28]
 800022e:	e002      	b.n	8000236 <main+0x6e>
 8000230:	69fb      	ldr	r3, [r7, #28]
 8000232:	3301      	adds	r3, #1
 8000234:	61fb      	str	r3, [r7, #28]
 8000236:	69fb      	ldr	r3, [r7, #28]
 8000238:	4a31      	ldr	r2, [pc, #196]	; (8000300 <main+0x138>)
 800023a:	4293      	cmp	r3, r2
 800023c:	d9f8      	bls.n	8000230 <main+0x68>
		for(uint32 i=0 ; i < 300000 ; i++ );
 800023e:	2300      	movs	r3, #0
 8000240:	61bb      	str	r3, [r7, #24]
 8000242:	e002      	b.n	800024a <main+0x82>
 8000244:	69bb      	ldr	r3, [r7, #24]
 8000246:	3301      	adds	r3, #1
 8000248:	61bb      	str	r3, [r7, #24]
 800024a:	69bb      	ldr	r3, [r7, #24]
 800024c:	4a2c      	ldr	r2, [pc, #176]	; (8000300 <main+0x138>)
 800024e:	4293      	cmp	r3, r2
 8000250:	d9f8      	bls.n	8000244 <main+0x7c>
		for(uint32 i=0 ; i < 300000 ; i++ );
 8000252:	2300      	movs	r3, #0
 8000254:	617b      	str	r3, [r7, #20]
 8000256:	e002      	b.n	800025e <main+0x96>
 8000258:	697b      	ldr	r3, [r7, #20]
 800025a:	3301      	adds	r3, #1
 800025c:	617b      	str	r3, [r7, #20]
 800025e:	697b      	ldr	r3, [r7, #20]
 8000260:	4a27      	ldr	r2, [pc, #156]	; (8000300 <main+0x138>)
 8000262:	4293      	cmp	r3, r2
 8000264:	d9f8      	bls.n	8000258 <main+0x90>
		spGPIOD_ODR->pin_12 = Pin_Low;
 8000266:	4b25      	ldr	r3, [pc, #148]	; (80002fc <main+0x134>)
 8000268:	681a      	ldr	r2, [r3, #0]
 800026a:	7853      	ldrb	r3, [r2, #1]
 800026c:	f36f 1304 	bfc	r3, #4, #1
 8000270:	7053      	strb	r3, [r2, #1]
		spGPIOD_ODR->pin_13 = Pin_High;
 8000272:	4b22      	ldr	r3, [pc, #136]	; (80002fc <main+0x134>)
 8000274:	681a      	ldr	r2, [r3, #0]
 8000276:	7853      	ldrb	r3, [r2, #1]
 8000278:	f043 0320 	orr.w	r3, r3, #32
 800027c:	7053      	strb	r3, [r2, #1]
		spGPIOD_ODR->pin_14 = Pin_Low;
 800027e:	4b1f      	ldr	r3, [pc, #124]	; (80002fc <main+0x134>)
 8000280:	681a      	ldr	r2, [r3, #0]
 8000282:	7853      	ldrb	r3, [r2, #1]
 8000284:	f36f 1386 	bfc	r3, #6, #1
 8000288:	7053      	strb	r3, [r2, #1]
		spGPIOD_ODR->pin_15 = Pin_High;
 800028a:	4b1c      	ldr	r3, [pc, #112]	; (80002fc <main+0x134>)
 800028c:	681a      	ldr	r2, [r3, #0]
 800028e:	7853      	ldrb	r3, [r2, #1]
 8000290:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000294:	7053      	strb	r3, [r2, #1]
		for(uint32 i=0 ; i < 300000 ; i++ );
 8000296:	2300      	movs	r3, #0
 8000298:	613b      	str	r3, [r7, #16]
 800029a:	e002      	b.n	80002a2 <main+0xda>
 800029c:	693b      	ldr	r3, [r7, #16]
 800029e:	3301      	adds	r3, #1
 80002a0:	613b      	str	r3, [r7, #16]
 80002a2:	693b      	ldr	r3, [r7, #16]
 80002a4:	4a16      	ldr	r2, [pc, #88]	; (8000300 <main+0x138>)
 80002a6:	4293      	cmp	r3, r2
 80002a8:	d9f8      	bls.n	800029c <main+0xd4>
		for(uint32 i=0 ; i < 300000 ; i++ );
 80002aa:	2300      	movs	r3, #0
 80002ac:	60fb      	str	r3, [r7, #12]
 80002ae:	e002      	b.n	80002b6 <main+0xee>
 80002b0:	68fb      	ldr	r3, [r7, #12]
 80002b2:	3301      	adds	r3, #1
 80002b4:	60fb      	str	r3, [r7, #12]
 80002b6:	68fb      	ldr	r3, [r7, #12]
 80002b8:	4a11      	ldr	r2, [pc, #68]	; (8000300 <main+0x138>)
 80002ba:	4293      	cmp	r3, r2
 80002bc:	d9f8      	bls.n	80002b0 <main+0xe8>
		for(uint32 i=0 ; i < 300000 ; i++ );
 80002be:	2300      	movs	r3, #0
 80002c0:	60bb      	str	r3, [r7, #8]
 80002c2:	e002      	b.n	80002ca <main+0x102>
 80002c4:	68bb      	ldr	r3, [r7, #8]
 80002c6:	3301      	adds	r3, #1
 80002c8:	60bb      	str	r3, [r7, #8]
 80002ca:	68bb      	ldr	r3, [r7, #8]
 80002cc:	4a0c      	ldr	r2, [pc, #48]	; (8000300 <main+0x138>)
 80002ce:	4293      	cmp	r3, r2
 80002d0:	d9f8      	bls.n	80002c4 <main+0xfc>
		for(uint32 i=0 ; i < 300000 ; i++ );
 80002d2:	2300      	movs	r3, #0
 80002d4:	607b      	str	r3, [r7, #4]
 80002d6:	e002      	b.n	80002de <main+0x116>
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	3301      	adds	r3, #1
 80002dc:	607b      	str	r3, [r7, #4]
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	4a07      	ldr	r2, [pc, #28]	; (8000300 <main+0x138>)
 80002e2:	4293      	cmp	r3, r2
 80002e4:	d9f8      	bls.n	80002d8 <main+0x110>
		for(uint32 i=0 ; i < 300000 ; i++ );
 80002e6:	2300      	movs	r3, #0
 80002e8:	603b      	str	r3, [r7, #0]
 80002ea:	e002      	b.n	80002f2 <main+0x12a>
 80002ec:	683b      	ldr	r3, [r7, #0]
 80002ee:	3301      	adds	r3, #1
 80002f0:	603b      	str	r3, [r7, #0]
 80002f2:	683b      	ldr	r3, [r7, #0]
 80002f4:	4a02      	ldr	r2, [pc, #8]	; (8000300 <main+0x138>)
 80002f6:	4293      	cmp	r3, r2
 80002f8:	d9f8      	bls.n	80002ec <main+0x124>
		spGPIOD_ODR->pin_12 = Pin_High;
 80002fa:	e76a      	b.n	80001d2 <main+0xa>
 80002fc:	20000010 	.word	0x20000010
 8000300:	000493df 	.word	0x000493df

08000304 <initIO>:
	}

}

void initIO(void)
{
 8000304:	b480      	push	{r7}
 8000306:	af00      	add	r7, sp, #0
spRCC_AHB1ENR->gpiod_en = 1u;
 8000308:	4b2d      	ldr	r3, [pc, #180]	; (80003c0 <initIO+0xbc>)
 800030a:	681a      	ldr	r2, [r3, #0]
 800030c:	7813      	ldrb	r3, [r2, #0]
 800030e:	f043 0308 	orr.w	r3, r3, #8
 8000312:	7013      	strb	r3, [r2, #0]

spGPIOD_MODER->pin_12 = General_Purpose_output_mode;
 8000314:	4b2b      	ldr	r3, [pc, #172]	; (80003c4 <initIO+0xc0>)
 8000316:	681a      	ldr	r2, [r3, #0]
 8000318:	78d3      	ldrb	r3, [r2, #3]
 800031a:	2101      	movs	r1, #1
 800031c:	f361 0301 	bfi	r3, r1, #0, #2
 8000320:	70d3      	strb	r3, [r2, #3]
spGPIOD_MODER->pin_13 = General_Purpose_output_mode;
 8000322:	4b28      	ldr	r3, [pc, #160]	; (80003c4 <initIO+0xc0>)
 8000324:	681a      	ldr	r2, [r3, #0]
 8000326:	78d3      	ldrb	r3, [r2, #3]
 8000328:	2101      	movs	r1, #1
 800032a:	f361 0383 	bfi	r3, r1, #2, #2
 800032e:	70d3      	strb	r3, [r2, #3]
spGPIOD_MODER->pin_14 = General_Purpose_output_mode;
 8000330:	4b24      	ldr	r3, [pc, #144]	; (80003c4 <initIO+0xc0>)
 8000332:	681a      	ldr	r2, [r3, #0]
 8000334:	78d3      	ldrb	r3, [r2, #3]
 8000336:	2101      	movs	r1, #1
 8000338:	f361 1305 	bfi	r3, r1, #4, #2
 800033c:	70d3      	strb	r3, [r2, #3]
spGPIOD_MODER->pin_15 = General_Purpose_output_mode;
 800033e:	4b21      	ldr	r3, [pc, #132]	; (80003c4 <initIO+0xc0>)
 8000340:	681a      	ldr	r2, [r3, #0]
 8000342:	78d3      	ldrb	r3, [r2, #3]
 8000344:	2101      	movs	r1, #1
 8000346:	f361 1387 	bfi	r3, r1, #6, #2
 800034a:	70d3      	strb	r3, [r2, #3]
spGPIOD_OTYPER->pin_12 = Output_push_pull;
 800034c:	4b1e      	ldr	r3, [pc, #120]	; (80003c8 <initIO+0xc4>)
 800034e:	681a      	ldr	r2, [r3, #0]
 8000350:	7853      	ldrb	r3, [r2, #1]
 8000352:	f36f 1304 	bfc	r3, #4, #1
 8000356:	7053      	strb	r3, [r2, #1]
spGPIOD_OTYPER->pin_13 = Output_push_pull;
 8000358:	4b1b      	ldr	r3, [pc, #108]	; (80003c8 <initIO+0xc4>)
 800035a:	681a      	ldr	r2, [r3, #0]
 800035c:	7853      	ldrb	r3, [r2, #1]
 800035e:	f36f 1345 	bfc	r3, #5, #1
 8000362:	7053      	strb	r3, [r2, #1]
spGPIOD_OTYPER->pin_14 = Output_push_pull;
 8000364:	4b18      	ldr	r3, [pc, #96]	; (80003c8 <initIO+0xc4>)
 8000366:	681a      	ldr	r2, [r3, #0]
 8000368:	7853      	ldrb	r3, [r2, #1]
 800036a:	f36f 1386 	bfc	r3, #6, #1
 800036e:	7053      	strb	r3, [r2, #1]
spGPIOD_OTYPER->pin_15 = Output_push_pull;
 8000370:	4b15      	ldr	r3, [pc, #84]	; (80003c8 <initIO+0xc4>)
 8000372:	681a      	ldr	r2, [r3, #0]
 8000374:	7853      	ldrb	r3, [r2, #1]
 8000376:	f36f 13c7 	bfc	r3, #7, #1
 800037a:	7053      	strb	r3, [r2, #1]
spGPIOD_PUPDR->pin_12 = Pull_down;
 800037c:	4b13      	ldr	r3, [pc, #76]	; (80003cc <initIO+0xc8>)
 800037e:	681a      	ldr	r2, [r3, #0]
 8000380:	78d3      	ldrb	r3, [r2, #3]
 8000382:	2102      	movs	r1, #2
 8000384:	f361 0301 	bfi	r3, r1, #0, #2
 8000388:	70d3      	strb	r3, [r2, #3]
spGPIOD_PUPDR->pin_13 = Pull_down;
 800038a:	4b10      	ldr	r3, [pc, #64]	; (80003cc <initIO+0xc8>)
 800038c:	681a      	ldr	r2, [r3, #0]
 800038e:	78d3      	ldrb	r3, [r2, #3]
 8000390:	2102      	movs	r1, #2
 8000392:	f361 0383 	bfi	r3, r1, #2, #2
 8000396:	70d3      	strb	r3, [r2, #3]
spGPIOD_PUPDR->pin_14 = Pull_down;
 8000398:	4b0c      	ldr	r3, [pc, #48]	; (80003cc <initIO+0xc8>)
 800039a:	681a      	ldr	r2, [r3, #0]
 800039c:	78d3      	ldrb	r3, [r2, #3]
 800039e:	2102      	movs	r1, #2
 80003a0:	f361 1305 	bfi	r3, r1, #4, #2
 80003a4:	70d3      	strb	r3, [r2, #3]
spGPIOD_PUPDR->pin_15 = Pull_down;
 80003a6:	4b09      	ldr	r3, [pc, #36]	; (80003cc <initIO+0xc8>)
 80003a8:	681a      	ldr	r2, [r3, #0]
 80003aa:	78d3      	ldrb	r3, [r2, #3]
 80003ac:	2102      	movs	r1, #2
 80003ae:	f361 1387 	bfi	r3, r1, #6, #2
 80003b2:	70d3      	strb	r3, [r2, #3]
}
 80003b4:	bf00      	nop
 80003b6:	46bd      	mov	sp, r7
 80003b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003bc:	4770      	bx	lr
 80003be:	bf00      	nop
 80003c0:	20000000 	.word	0x20000000
 80003c4:	20000004 	.word	0x20000004
 80003c8:	20000008 	.word	0x20000008
 80003cc:	2000000c 	.word	0x2000000c

080003d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003d0:	480d      	ldr	r0, [pc, #52]	; (8000408 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003d2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003d4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003d8:	480c      	ldr	r0, [pc, #48]	; (800040c <LoopForever+0x6>)
  ldr r1, =_edata
 80003da:	490d      	ldr	r1, [pc, #52]	; (8000410 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003dc:	4a0d      	ldr	r2, [pc, #52]	; (8000414 <LoopForever+0xe>)
  movs r3, #0
 80003de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003e0:	e002      	b.n	80003e8 <LoopCopyDataInit>

080003e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003e6:	3304      	adds	r3, #4

080003e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003ec:	d3f9      	bcc.n	80003e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003ee:	4a0a      	ldr	r2, [pc, #40]	; (8000418 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003f0:	4c0a      	ldr	r4, [pc, #40]	; (800041c <LoopForever+0x16>)
  movs r3, #0
 80003f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003f4:	e001      	b.n	80003fa <LoopFillZerobss>

080003f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003f8:	3204      	adds	r2, #4

080003fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003fc:	d3fb      	bcc.n	80003f6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003fe:	f000 f811 	bl	8000424 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000402:	f7ff fee1 	bl	80001c8 <main>

08000406 <LoopForever>:

LoopForever:
  b LoopForever
 8000406:	e7fe      	b.n	8000406 <LoopForever>
  ldr   r0, =_estack
 8000408:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800040c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000410:	20000014 	.word	0x20000014
  ldr r2, =_sidata
 8000414:	0800048c 	.word	0x0800048c
  ldr r2, =_sbss
 8000418:	20000014 	.word	0x20000014
  ldr r4, =_ebss
 800041c:	20000030 	.word	0x20000030

08000420 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000420:	e7fe      	b.n	8000420 <ADC_IRQHandler>
	...

08000424 <__libc_init_array>:
 8000424:	b570      	push	{r4, r5, r6, lr}
 8000426:	4d0d      	ldr	r5, [pc, #52]	; (800045c <__libc_init_array+0x38>)
 8000428:	4c0d      	ldr	r4, [pc, #52]	; (8000460 <__libc_init_array+0x3c>)
 800042a:	1b64      	subs	r4, r4, r5
 800042c:	10a4      	asrs	r4, r4, #2
 800042e:	2600      	movs	r6, #0
 8000430:	42a6      	cmp	r6, r4
 8000432:	d109      	bne.n	8000448 <__libc_init_array+0x24>
 8000434:	4d0b      	ldr	r5, [pc, #44]	; (8000464 <__libc_init_array+0x40>)
 8000436:	4c0c      	ldr	r4, [pc, #48]	; (8000468 <__libc_init_array+0x44>)
 8000438:	f000 f818 	bl	800046c <_init>
 800043c:	1b64      	subs	r4, r4, r5
 800043e:	10a4      	asrs	r4, r4, #2
 8000440:	2600      	movs	r6, #0
 8000442:	42a6      	cmp	r6, r4
 8000444:	d105      	bne.n	8000452 <__libc_init_array+0x2e>
 8000446:	bd70      	pop	{r4, r5, r6, pc}
 8000448:	f855 3b04 	ldr.w	r3, [r5], #4
 800044c:	4798      	blx	r3
 800044e:	3601      	adds	r6, #1
 8000450:	e7ee      	b.n	8000430 <__libc_init_array+0xc>
 8000452:	f855 3b04 	ldr.w	r3, [r5], #4
 8000456:	4798      	blx	r3
 8000458:	3601      	adds	r6, #1
 800045a:	e7f2      	b.n	8000442 <__libc_init_array+0x1e>
 800045c:	08000484 	.word	0x08000484
 8000460:	08000484 	.word	0x08000484
 8000464:	08000484 	.word	0x08000484
 8000468:	08000488 	.word	0x08000488

0800046c <_init>:
 800046c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800046e:	bf00      	nop
 8000470:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000472:	bc08      	pop	{r3}
 8000474:	469e      	mov	lr, r3
 8000476:	4770      	bx	lr

08000478 <_fini>:
 8000478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800047a:	bf00      	nop
 800047c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800047e:	bc08      	pop	{r3}
 8000480:	469e      	mov	lr, r3
 8000482:	4770      	bx	lr
